// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  relationMode = "prisma"
}

model Store {
  id  String  @id @default(uuid())
  name  String
  userId  String
  billboards  Billboard[] @relation("StoreToBillboard")
  category  Category[] @relation("StoreToCategory")
  sizes  Size[] @relation("StoreToSize")
  color  Color[] @relation("StoreToColor")
  product Product[] @relation("StoreToProduct")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Billboard {
  id   String @id @default(uuid())
  storeId String
  store Store @relation("StoreToBillboard", fields: [storeId], references: [id])
  label String
  imageUrl  String
  categories Category[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model Category {
  id  String @id @default(uuid())
  storeId String
  store Store @relation("StoreToCategory", fields: [storeId], references: [id])
  billboardId String
  billboard Billboard @relation(fields: [billboardId], references: [id])
  product Product[] @relation("CategoryToProduct")
  name  String
  createdAt DateTime  @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
  @@index([billboardId])
}

model Size {
  id  String @id @default(uuid())
  storeId String
  store Store @relation("StoreToSize", fields: [storeId], references: [id])
  product Product[]
  name  String
  value String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model Color {
  id  String @id @default(uuid())
  storeId String
  store Store @relation("StoreToColor", fields: [storeId], references: [id])
  product Product[]
  name  String
  value String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model Product {
  id  String @id @default(uuid())
  storeId String
  store Store @relation("StoreToProduct", fields: [storeId], references: [id])
  categoryId  String
  category  Category @relation("CategoryToProduct", fields: [categoryId], references: [id])
  name  String
  price Decimal
  isFeatured  Boolean @default(false)
  isArchive Boolean @default(false)
  sizeId  String
  size  Size  @relation(fields: [sizeId], references: [id])
  colorId String
  color Color @relation(fields: [colorId], references: [id])

  @@index([storeId])
  @@index([categoryId])
  @@index([sizeId])
  @@index([colorId])
}